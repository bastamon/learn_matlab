close all;clc;
%%%%%%%%%%%原始数据
%%%%%%%%%%%%%%%%%人数/万人
sqrs=xlsread('ex9_3.xlsx','sheet1','A1:A20');sqrs=sqrs';
%%%%%%%%%%%%%%%%%机动车数/万辆
sqjdcs=xlsread('ex9_3.xlsx','sheet1','B1:B20');sqjdcs=sqjdcs';
%%%%%%%%%%%%%%%%%%%公路面积/万平方公里
sqglmj=xlsread('ex9_3.xlsx','sheet1','C1:C20');sqglmj=sqglmj';
%%%%%%%%%%%%%%%%%%公路客运量/万人
glkyl=xlsread('ex9_3.xlsx','sheet1','D1:B20');glkyl=glkyl';
%%%%%%%%%%%%%%%%%%公路货运量/万吨
glhyl=xlsread('ex9_3.xlsx','sheet1','E1:E20');glhyl=glhyl';
%%%%%%%%%%%%%%%输入数据矩阵
p=[sqrs;sqjdcs;sqglmj];
t=[glkyl;glhyl];
%%%%%%%%%%%%数据归一化
[P,minp,maxp,T,mint,maxt]=premnmx(p,t);
%%%%%%%%%%%%%%%%%创建一个新的前向神经网络
net=newff(minmax(P),[8,2],{'tansig','purelin'},'traingdx');
%%%%%%%%%%%%%%设置训练参数
net.trainParam.show=50;
net.trainParam.lr=0.035;
net.trainParam.epochs=2000;
net.trainParam.goal=1e-3;
%%%%%%%%%%%%%%调用TRAINGDM算法训练BP网络
[net,tr]=train(net,P,T);
%%%%%%%%%%%%对BP网络进行仿真
A=sim(net,P);
a=postmnmx(A,mint,maxt);
%%%%%%%%%%%优化后输入层权值和阈值
inputWeights=net.IW{1,1};
inputbias=net.b{1};
%%%%%%%%%%%优化后网络层权值和阈值
layerWeights=net.LW{2,1};
layerbias=net.b{2};
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%时间轴刻度
x=1990:2009;
%%%%%%%%%%%%%网络输出客运量
newk=a(1,:);
%%%%%%%%%%%%%%%网络输出货运量
newh=a(2,:);
%%%%%%%%%%%%绘制公路客运量对比图
figure
plot(x,newk,'r-o',x,glkyl,'b--+');
legend('网络输出客运量','实际客运量');
xlabel('年份'):ylabel('客运量/万人');
%%%%%%%%%%%%绘制公路货运量对比图
plot(x,newh,'r-o',x,glkyl,'b--+');
legend('网络输出货运量','实际货运量');
xlabel('年份'):ylabel('运货量/万吨');
%%%%%%%%%%%%%训练好的网络进行预测%%%%%%%%%%%%
%%%%%%%%%%%%2010和2011年的相关数据
pnew=[73.39 75.55;3.9 4.1;0.98 1.02];
SamNum=size(pnew,2);
%%%%%%%%%%%利用原始输入数据的归一化参数对新数据进行归一化
pnewn=tanmnmx(pnew,minp,maxp);
%%%%%%%%%%%%隐含层输出预测结果
HiddenOut=tansig(inputWeights*pnew+repmat(inputbias,1,SamNum));
%%%%%%%%%%%%输出层输出预测结果
anewn=purelin(layerWeights*Hidden*repmat(inputbias,1,SamNum));
%%%%%%%%%%%%%把网络预测得到的数据还原为原始的数据量
anew=postmnmx(anewn,mint,maxt);